@model TESTFRAMEWORK.Models.ResearcherViewModel

@{
    ViewBag.Title = "เพิ่มนักวิจัย";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Load Select2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<style>

    .select2-container .select2-selection--single,
    .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .select2-selection__placeholder {
        height: 39px !important;
    }

    .select2-container .select2-selection--single {
        padding-top: .25rem;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 38px !important;
    }


    h4 {
        margin-bottom: 0px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: #444;
        line-height: 28px;
    }

    .select2-container .select2-selection--single .select2-selection__rendered {
        display: block;
        padding-left: 8px;
        padding-right: 20px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @@media (max-width: 1200px) {
        .mt_box {
            margin-top: 1rem !important;
        }
    }

    /* Ensure Select2 dropdown opens below */
    .select2-container--open .select2-dropdown {
        top: 0 !important;
        bottom: auto !important;
    }

    .select2-container--open {
        z-index: 1050 !important;
    }

    .card {
        overflow: visible !important;
    }

    .container-xxl {
        position: relative;
    }

    .select2-container {
        width: 100% !important;
    }

    /* Force dropdowns to be visible */
    .select2-container--open .select2-dropdown {
        display: block !important;
        position: absolute !important;
        z-index: 99999 !important; /* Even higher z-index */
    }

    body .select2-container--open {
        z-index: 99999 !important;
    }

    /* Make sure no other elements can overlap the dropdown */
    .select2-results__options {
        position: relative;
        z-index: 99999 !important;
    }

    /* Remove any max-height constraints */
    .select2-results {
        max-height: none !important;
    }

    .mt-max-lg-3 {
        padding: 0px !important;
        
    }

    @@media screen and (max-width: 1024px) {
        .mt-max-lg-3 {
            margin-top: 1rem !important;
            max-width: 95%;
        }
    }

    .btn-check_1 {
        border-start-start-radius: 8px !important;
        border-end-start-radius: 8px !important;
    }



</style>

@using (Html.BeginForm("CreateInternal", "Researcher", FormMethod.Post, new { @class = "needs-validation", novalidate = "" }))
{
    @Html.AntiForgeryToken()

    <div class="card shadow-sm border-0 rounded-4 container-xxl mt-max-lg-3" style="margin-top: 5rem;">
        <div class="card-header border-0 mb-3" style="background-color: #F26522; width: 100%;">
            <h4 class="fw-bold mb-0 text-white"><i class="fas fa-user-plus me-2"></i> เพิ่มข้อมูลนักวิจัย (บุคคลภายใน)</h4>
        </div>

        <div class="card-body">
            @* Validation Summary *@
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul class="mb-0">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            @* ประเภทผู้ใช้ *@
            <div class="mb-4">
                <label class="form-label fw-bold mb-2">ประเภทผู้ใช้</label>
                <div class="btn-group w-100" role="group" aria-label="User Type">
                    <input type="radio" class="btn-check btn-check_1" name="UserType" id="hospitalStaff" value="HospitalStaff" autocomplete="off" >
                    <label class="btn btn-outline-primary" for="hospitalStaff">คนทำงาน รพ.</label>

                    <input type="radio" class="btn-check" name="UserType" id="student" value="Student" autocomplete="off">
                    <label class="btn btn-outline-primary" for="student">คณาจารย์ / นักศึกษา</label>
                </div>
                @Html.ValidationMessageFor(m => m.UserType, "", new { @class = "text-danger small mt-1 d-block" })
            </div>

            @* ชื่อ-นามสกุล *@
            <div class="row g-3 mb-4">
                <div class="col-md-4">
                    <label class="form-label">คำนำหน้า</label>
                    <div class="d-flex">
                        <input type="text" name="Title" class="form-control" placeholder="กรุณากรอกคำนำหน้า" required />
                    </div>
                </div>

                <div class="col-md-8">
                    <label class="form-label">ชื่อ-นามสกุล</label>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "กรุณากรอกชื่อ-นามสกุล", required = "required" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger small" })
                </div>
            </div>

            @* แผนก / สาขา *@
            <div class="mb-4">
                    <label class="form-label" id="divisionLabel">เลือกแผนก/สาขา</label>
                <div id="select-divitaionLabel" style="display:none;">
                    <select id="divisionSelector" class="form-select js-example-basic-single" required>
                        <option value="">-- เลือกแผนก --</option>
                        @foreach (var division in Model.AllDivisions.Where(d => d.DepartmentId <= 29))
                        {
                            <option value="@division.Id"
                                    data-department-id="@division.DepartmentId"
                                    data-department-name="@division.DepartmentName"
                                    data-workgroup-id="@division.WorkGroupId"
                                    data-workgroup-name="@division.WorkGroupName">
                                @division.DivisionName (@division.DepartmentName, @division.WorkGroupName)
                            </option>
                        }
                    </select>
                </div>

                <div id="select-departmentLabel" style="display:none;">
                    <select id="branchSelector" class="form-select js-example-basic-single" required>
                        <option value="">-- เลือกสาขา --</option>
                        @foreach (var branch in Model.AllDivisions.Where(d => d.DepartmentId >= 30))
                        {
                            <option value="@branch.Id"
                                    data-department-id="@branch.DepartmentId"
                                    data-department-name="@branch.DepartmentName"
                                    data-workgroup-id="@branch.WorkGroupId"
                                    data-workgroup-name="@branch.WorkGroupName">
                                @branch.DivisionName (@branch.DepartmentName, @branch.WorkGroupName)
                            </option>
                        }
                    </select>
                </div>
            </div>

            @* แสดงผลข้อมูลที่เลือก *@
        <div class="row g-3 mb-4">
            <div class="col-md-3">
                <label class="form-label">กลุ่มงาน</label>
                <div class="input-group">
                    <input type="text" id="workGroupDisplay" class="form-control" readonly />
                    @Html.HiddenFor(m => m.WorkGroupId, new { id = "workGroupId" })
                </div>
            </div>
            <div class="col-md-3">
                <label class="form-label">ฝ่ายงาน</label>
                <div class="input-group">
                    <input type="text" id="departmentDisplay" class="form-control" readonly />
                    @Html.HiddenFor(m => m.DepartmentId, new { id = "departmentId" })
                </div>
            </div>
            <div class="col-md-3">
                <label class="form-label">แผนก/สาขา</label>
                <div class="input-group">
                    <input type="text" id="divisionDisplay" class="form-control" readonly />
                    @Html.HiddenFor(m => m.DivisionId, new { id = "divisionId" })
                </div>
            </div>

            <div class="col-md-3">
                @Html.LabelFor(m => m.TypeResearchId, "ประเภทผู้วิจัยร่วม", new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.TypeResearchId, (SelectList)ViewBag.TypeResearch, "-- กรุณาเลือกประเภท --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TypeResearchId, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

            @* ปุ่มบันทึก/ยกเลิก *@
            <div class="d-flex justify-content-center mt-4">
                <button type="submit" class="btn btn-success rounded-pill px-4 me-3">
                    <i class="fas fa-save me-2"></i> บันทึก
                </button>
                <a href="@Url.Action("Index")" class="btn btn-secondary rounded-pill px-4">
                    <i class="fas fa-times me-2"></i> ยกเลิก
                </a>
            </div>
        </div>
    </div>
}

@section scripts {
    <!-- jQuery (ensure loaded only once, preferably in _Layout.cshtml) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            try {

                // Initialize Select2 for all select elements
                $('.js-example-basic-single, #titleDropdown').select2({
                    dropdownParent: $('body'),
                    width: '100%',
                    minimumResultsForSearch: 1,
                    placeholder: function () {
                        return $(this).data('placeholder') || '-- กรุณาเลือก --';
                    }
                }).on('select2:open', function () {
                    // Set higher z-index for the dropdown
                    $('.select2-container--open').css('z-index', '9999');
                });

                $('.js-example-basic-single, #titleDropdown').on('select2:open', function () {
                    // Wait a tiny bit for the dropdown to be created
                    setTimeout(function () {
                        // Force reposition the dropdown
                        $('.select2-results__options').css('position', 'relative');
                        $('.select2-dropdown').css({
                            'position': 'absolute',
                            'z-index': '99999'
                        });
                    }, 10);
                });

                // Initially hide both dropdowns
                $('#divisionSelector').hide();
                $('#branchSelector').hide();
            } catch (e) {
                console.error('Select2 initialization failed:', e);
            }

            // User Type Toggle Logic
            $('input[name="UserType"]').change(function () {
                var userType = $(this).val();
                if (userType === "HospitalStaff") {
                    $('#select-divitaionLabel').show();
                    $('#select-departmentLabel').hide();
                    $('#divisionLabel').text('เลือกแผนก');
                    $('#branchSelector').val('').trigger('change');
                } else if (userType === "Student") {
                    $('#select-divitaionLabel').hide();
                    $('#select-departmentLabel').show();
                    $('#divisionLabel').text('เลือกสาขา');
                    $('#divisionSelector').val('').trigger('change');
                }
                // Clear previous selections
                $("#workGroupDisplay").val("");
                $("#departmentDisplay").val("");
                $("#divisionDisplay").val("");
                $("#workGroupId").val("");
                $("#departmentId").val("");
                $("#divisionId").val("");
            });

            // Title Dropdown Logic
            $('#titleDropdown').change(function () {
                if ($(this).val() === "อื่นๆ") {
                    $('#otherTitle').show().focus();
                } else {
                    $('#otherTitle').hide();
                }
            });

            // Form Submission
            $('form').submit(function () {
                if ($('#titleDropdown').val() === "อื่นๆ") {
                    $('#titleDropdown').val($('#otherTitle').val());
                }
                // Remove 'required' from hidden dropdown to prevent validation errors
                if ($('input[name="UserType"]:checked').val() === "HospitalStaff") {
                    $('#branchSelector').removeAttr('required');
                } else if ($('input[name="UserType"]:checked').val() === "Student") {
                    $('#divisionSelector').removeAttr('required');
                }
            });

            // Division/Branch Selector Logic
            $('#divisionSelector, #branchSelector').change(function () {
                var selectedOption = $(this).find("option:selected");
                if (!$(this).val()) {
                    $("#workGroupDisplay").val("");
                    $("#departmentDisplay").val("");
                    $("#divisionDisplay").val("");
                    $("#workGroupId").val("");
                    $("#departmentId").val("");
                    $("#divisionId").val("");
                    return;
                }
                var divisionId = $(this).val();
                var divisionName = selectedOption.text().split('(')[0].trim();
                var departmentId = selectedOption.data("department-id");
                var departmentName = selectedOption.data("department-name");
                var workgroupId = selectedOption.data("workgroup-id");
                var workgroupName = selectedOption.data("workgroup-name");
                $("#workGroupDisplay").val(workgroupName);
                $("#departmentDisplay").val(departmentName);
                $("#divisionDisplay").val(divisionName);
                $("#workGroupId").val(workgroupId);
                $("#departmentId").val(departmentId);
                $("#divisionId").val(divisionId);
            });

            // Bootstrap Form Validation
            (function () {
                'use strict';
                var forms = document.querySelectorAll('.needs-validation');
                Array.prototype.slice.call(forms).forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            })();
        });
    </script>
}