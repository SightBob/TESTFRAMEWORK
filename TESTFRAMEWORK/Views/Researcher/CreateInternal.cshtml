@model TESTFRAMEWORK.Models.ResearcherViewModel

@{
    ViewBag.Title = "เพิ่มนักวิจัย";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    h4 {
        margin-bottom: 0px;
    }
</style>

@using (Html.BeginForm("CreateInternal", "Researcher", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="container-xxl"  style="max-width: 95%; margin-top: 7.5rem;">
        <div class="" style="background-color: #F26522; padding: 1rem; border-top-left-radius: 5px; border-top-right-radius: 5px;">
            <h4 class="text-white">เพิ่มข้อมูลนักวิจัย (บุคคลภายใน)</h4>
        </div>

    <div class="flex-grow-1 container-p-y card px-3" style="border-top-left-radius: 0px; border-top-right-radius: 0px;">

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <!-- ✅ ข้อมูลพื้นฐาน -->
        <div class="row">
         @*   <div class="col-md-4">
                <div class="form-group mb-3">
                    @Html.Label("รหัสผู้วิจัย", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(m => m.ResearcherNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ResearcherNumber, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="col-md-3">
                <div class="form-group mb-3">
                    @Html.Label("คำนำหน้า", new { @class = "font-weight-bold" })
                    <div class="d-flex">
                        @Html.DropDownListFor(m => m.Title, new SelectList(new[]
                        {
                            "น.ส.", "นาย", "นพ.", "พญ.", "อ.นพ.", "นศ.ทพ.",
                            "ผศ.", "ผศ.พญ.", "ผศ.ดร.", "อ.ดร.", "อ.ทพญ.ดร.", "อื่นๆ"
                        }), "-- กรุณาเลือก --", new { @class = "form-control", id = "titleDropdown" })
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control ms-lg-2", style = "display:none;", placeholder = "ระบุคำนำหน้า", id = "otherTitle" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group mb-3">
                    @Html.Label("ชื่อ", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- ✅ บุคคลภายใน: กลุ่มงาน / ฝ่ายงาน / แผนก -->
        <div id="internal-fields">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        @Html.Label("กลุ่มงาน", new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(m => m.WorkGroupId,
                            ViewBag.WorkGroupList as SelectList,
                            "-- เลือกกลุ่มงาน --",
                            new { @class = "form-control", id = "workGroupDropdown" })
                    </div>
                </div>

                <!-- ✅ ฝ่ายงาน -->
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        @Html.Label("ฝ่ายงาน", new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(m => m.DepartmentId,
                            new SelectList(Enumerable.Empty<SelectListItem>()),
                            "-- เลือกฝ่ายงาน --",
                            new { @class = "form-control", id = "departmentDropdown" })
                    </div>
                </div>

                <!-- ✅ แผนก -->
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        @Html.Label("แผนก", new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(m => m.DivisionId,
                            new SelectList(Enumerable.Empty<SelectListItem>()),
                            "-- เลือกแผนก --",
                            new { @class = "form-control", id = "divisionDropdown" })
                    </div>
                </div>

                <!-- ✅ ประเภทวิจัย -->
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        @Html.Label("ประเภทวิจัย", new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(m => m.TypeResearchId,
                            ViewBag.TypeResearchList as SelectList,
                            "-- เลือกประเภทวิจัย --",
                            new { @class = "form-control", id = "typeResearchDropdown" })
                    </div>
                </div>

            </div>
        </div>

        <div class="d-flex align-items-center justify-content-center mt-4">
            <button type="submit" class="btn btn-success px-4 me-3">
                <i class="fas fa-save"></i> บันทึกข้อมูล
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary px-4">ยกเลิก</a>
        </div>
    </div>
</div>
}



@section scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>

        $(document).ready(function () {
            $('#titleDropdown').change(function () {
                if ($(this).val() === "อื่นๆ") {
                    $('#otherTitle').show();
                } else {
                    $('#otherTitle').hide();
                }
            });

            // Handle form submission
            $('form').submit(function () {
                if ($('#titleDropdown').val() === "อื่นๆ") {
                    $('#titleDropdown').val($('#otherTitle').val());
                }
            });
        });

        $(document).ready(function () {
            // ✅ เมื่อเลือก "กลุ่มงาน" → โหลด "ฝ่ายงาน"
            $("#workGroupDropdown").change(function () {
                var workGroupId = $(this).val();
                $("#departmentDropdown").html('<option value="">-- เลือกฝ่ายงาน --</option>');
                $("#divisionDropdown").html('<option value="">-- เลือกแผนก --</option>');

                if (!workGroupId) return;

                $.get("@Url.Action("GetDepartmentsByWorkGroup", "Researcher")", { workGroupId: workGroupId })
                    .done(function (data) {
                        $.each(data, function (index, item) {
                            $("#departmentDropdown").append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    })
                    .fail(function () {
                        console.error("ไม่สามารถโหลดข้อมูลฝ่ายงานได้");
                    });
            });

            // ✅ เมื่อเลือก "ฝ่ายงาน" → โหลด "แผนก"
            $("#departmentDropdown").change(function () {
                var departmentId = $(this).val();
                $("#divisionDropdown").html('<option value="">-- เลือกแผนก --</option>');

                if (!departmentId) return;

                $.get("@Url.Action("GetDivisionsByDepartment", "Researcher")", { departmentId: departmentId })
                    .done(function (data) {
                        $.each(data, function (index, item) {
                            $("#divisionDropdown").append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    })
                    .fail(function () {
                        console.error("ไม่สามารถโหลดข้อมูลแผนกได้");
                    });
            });
        });
    </script>
}