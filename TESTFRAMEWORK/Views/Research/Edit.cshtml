@model TESTFRAMEWORK.Models.ResearchProjectViewModel

@{
    ViewBag.Title = "แก้ไขโครงการวิจัย";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- โหลด CSS ของ Select2 (ในที่นี้ใส่ไว้ในหน้าเลย) -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<style>


    .select2-container .select2-selection--single,
    .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .select2-selection__placeholder {
        height: 39px !important;
    }

    .select2-container .select2-selection--single {
        padding-top: .25rem;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 38px !important;
    }

    .file-list {
        margin-top: 15px;
    }

    .file-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 15px;
        margin-bottom: 8px;
        background-color: #f8f9fa;
        border-radius: 5px;
        border: 1px solid #e9ecef;
    }

    .file-actions {
        display: flex;
        gap: 10px;
    }
</style>

<h2 class="mb-4">แก้ไขโครงการวิจัย</h2>

@using (Html.BeginForm("Edit", "Research", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ResearchProject.ProjectID)

    <div class="container-xxl flex-grow-1 container-p-y mt-xl-5 card">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h4 class="mb-3">รายละเอียดโครงการ</h4>
            <button id="editButton" type="button" class="btn btn-warning mb-3" onclick="enableEditing()">แก้ไข</button>
        </div>


        <!-- แสดงข้อความข้อผิดพลาดถ้ามี -->
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(model => model.ResearchProject.FiscalYear, "วันตอบรับเข้าเก็บข้อมูล", new { @class = "font-weight-bold" })
                @Html.TextBoxFor(model => model.ResearchProject.FiscalYear, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @disabled = "disabled", id = "RequestDate", })
                @Html.ValidationMessageFor(model => model.ResearchProject.FiscalYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.ResearchProject.ProjectCode, "รหัสโครงการ", new { @class = "font-weight-bold" })
                @Html.TextBoxFor(m => m.ResearchProject.ProjectCode, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.ResearchProject.sut_hospital_grant_code, "รหัสสัญญาทุนวิจัย รพ. มทส.", new { @class = "font-weight-bold" })
                @Html.TextBoxFor(m => m.ResearchProject.sut_hospital_grant_code, new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>
    </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.ResearchProject.ProjectName, "ชื่อโครงการ", new { @class = "font-weight-bold" })
                    @Html.EditorFor(model => model.ResearchProject.ProjectName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                </div>
            </div>
        </div>

        <div class="row">
            <!-- ประเภท EC -->
            <div class="col-md-12">
                <div class="form-group mb-3">
                    @Html.Label("ประเภท EC", new { @class = "font-weight-bold" })
                    @Html.DropDownListFor(m => m.ResearchProject.TypeECID, ViewBag.TypeECList as SelectList, "-- เลือกประเภท EC --", new { @class = "form-control type_ec", @disabled = "disabled" })
                </div>
            </div>

            <!-- หัวหน้าโครงการ (Select2) -->
            <div class="col-md-3">
                @Html.Label("หัวหน้าโครงการ", new { @class = "font-weight-bold" })
                @Html.DropDownListFor(m => m.ResearchProject.HeadResearcherId,
                           ViewBag.HeadResearcherList as SelectList,
                           "-- เลือกหัวหน้าโครงการ --",
                           new { @class = "js-example-basic-single form-control headResearcher", @disabled = "disabled" })

            </div>

            <!-- สำนักวิชา/หน่วยงาน -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    @Html.Label("กลุ่มงาน", new { @class = "font-weight-bold" })
                    <input type="text" id="headWorkGroup" class="form-control" disabled>
                </div>
            </div>

            <!-- สำนักวิชา/หน่วยงาน -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    @Html.Label("สำนักวิชา / หน่วยงาน", new { @class = "font-weight-bold" })
                    <input type="text" id="headDepartment" class="form-control" disabled>
                </div>
            </div>

            <!-- สำนักวิชา/หน่วยงาน -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    @Html.Label("ฝ่าย / แผนก", new { @class = "font-weight-bold" })
                    <input type="text" id="headDivition" class="form-control" disabled>
                </div>
            </div>
        </div>

        <hr class="my-4" />
        <h4 class="mb-3">👥 ผู้วิจัยร่วม</h4>

        <div class="table-responsive">
            <table class="table table-bordered" id="assistantTable">
                <thead class="table-primary text-center">
                    <tr>
                        <th style="width: 400px;">รหัสและชื่อผู้วิจัยร่วม</th>
                        <th>
                            กลุ่มงาน
                        </th>
                        <th>
                            สำนักวิชา /หน่วยงาน
                        </th>
                        <th>ฝ่าย / แผนก</th>
                        <th>ประเภท</th>
                        <th>ลบ</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ResearchAssistants != null && Model.ResearchAssistants.Any())
                    {
                        for (int i = 0; i < Model.ResearchAssistants.Count; i++)
                        {
                            <tr id="assistant_@i">
                                <td>
                                    <select class="form-control researcherSelect js-example-basic-single"
                                            name="ResearchAssistants[@i].ResearcherNumber"
                                            style="width: 100%;" disabled>
                                        <option value="">-- เลือกนักวิจัย --</option>
                                        @foreach (var item in Model.HeadResearcherList)
                                        {
                                            <option value="@item.Value" @(item.Value == Model.ResearchAssistants[i].ResearcherNumber ? "selected" : "")>@item.Text</option>
                                        }
                                    </select>
                                </td>
                                <td><input type="text" class="form-control assistantWorkgroup" disabled /></td>
                                <td><input type="text" class="form-control assistantFaculty" disabled /></td>
                                <td><input type="text" class="form-control assistantDivisions" disabled /></td>
                                <td><input type="text" class="form-control assistantType" disabled /></td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeAssistant(@i)" disabled>ลบ</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-primary mt-2" onclick="addAssistant()" disabled>+ เพิ่มผู้วิจัยร่วม</button>

        <div class="row mt-4">
            <div class="col-md-12">
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.ResearchProject.ECApprovalCode, "รหัส EC", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(model => model.ResearchProject.ECApprovalCode, new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.ResearchProject.ECApprovalDate, "วันที่อนุมัติ EC", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(model => model.ResearchProject.ECApprovalDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @disabled = "disabled", id = "RequestDate" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResearchProject.ECExpirationDate, "วันหมดอายุ EC", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(model => model.ResearchProject.ECExpirationDate, "{0:yyyy-MM-dd}", new { @class = "form-control date_ec", type = "date", @disabled = "disabled", id = "RequestDate" })
                    @Html.ValidationMessageFor(model => model.ResearchProject.ECExpirationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResearchProject.ResearchApprovalDate, "วันที่อนุมัติ (ขอเข้าเก็บข้อมูล)", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(model => model.ResearchProject.ResearchApprovalDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @disabled = "disabled", id = "RequestDate" })
                    @Html.ValidationMessageFor(model => model.ResearchProject.ResearchApprovalDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResearchProject.ResearchExpirationDate, "วันหมดอายุ (ขอเข้าเก็บข้อมูล)", new { @class = "font-weight-bold" })
                    @Html.TextBoxFor(model => model.ResearchProject.ResearchExpirationDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @disabled = "disabled", id = "RequestDate" })
                    @Html.ValidationMessageFor(model => model.ResearchProject.ResearchExpirationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResearchProject.Note, "หมายเหตุ", new { @class = "font-weight-bold" })
                    @Html.TextAreaFor(model => model.ResearchProject.Note, new { @class = "form-control", rows = 4, @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.ResearchProject.Note, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <hr class="my-4">
        <h4 class="mb-3">📎 ไฟล์แนบ</h4>

        @if (Model.ResearchProject.ResearchFile_tbl != null && Model.ResearchProject.ResearchFile_tbl.Any())
        {
            <div class="card shadow-sm p-3">
                <div class="table-responsive">
                    <table class="table table-bordered align-middle">
                        <thead class="table-light text-center">
                            <tr>
                                <th>📄 ชื่อไฟล์</th>
                                <th class="text-center">ดาวน์โหลด</th>
                                <th class="text-center">🗑️ ลบไฟล์</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var file in Model.ResearchProject.ResearchFile_tbl)
                            {
                                <tr>
                                    <td>
                                        <i class="bi bi-file-earmark-text text-primary"></i>
                                        @file.FileName
                                    </td>
                                    <td class="text-center">
                                        <a href="@Url.Action("DownloadFile", "Research", new { fileId = file.FileID })" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-download"></i> ดาวน์โหลด
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <input type="hidden" name="fileId" value="@file.FileID" />
                                        <button type="button" onclick="confirmDelete(@file.FileID)" class="btn btn-outline-primary btn-sm" disabled>
                                            <i class="bi bi-download"></i> ลบ
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-warning d-flex align-items-center">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                <span>ไม่มีไฟล์แนบ</span>
            </div>
        }

        <div class="form-group mt-4">
            <label class="font-weight-bold">อัปโหลดไฟล์ใหม่ (เลือกหลายไฟล์ได้)</label>
            <input type="file" name="files" multiple class="form-control" disabled />
        </div>

        <div class="form-group mt-4">
            @Html.LabelFor(m => m.ResearchProject.StatusProjectID, "สถานะโครงการ", new { @class = "font-weight-bold" })
            @Html.DropDownListFor(m => m.ResearchProject.StatusProjectID, ViewBag.StatusProjectList as SelectList, "-- เลือกสถานะ --", new { @class = "form-control", @disabled = "disabled" })
        </div>

        <div class="d-flex align-items-center justify-content-center mt-4">
            <button type="submit" id="saveBtn" class="btn btn-success px-4 me-3" disabled>
                <i class="fas fa-save"></i> บันทึกข้อมูล
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary px-4">ยกเลิก</a>
        </div>
    </div>
}

@section scripts {
    <!-- โหลด JS ของ jQuery และ Select2 จาก _Layout.cshtml (หรือที่อื่น) ให้เรียบร้อยก่อนโค้ดนี้ -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/th.js"></script>

    <script>
        // Fix for enabling all form elements when Edit button is clicked

        function confirmDelete(fileId) {
            if (confirm("คุณแน่ใจหรือไม่ว่าต้องการลบไฟล์นี้?")) {
                // สร้าง form และ submit เพื่อเรียก action ลบ
                const form = document.createElement("form");
                form.method = "post";
                form.action = "/Research/DeleteFile"; // แก้ชื่อ controller ให้ตรง

                const input = document.createElement("input");
                input.type = "hidden";
                input.name = "fileId";
                input.value = fileId;

                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        }

function enableEditing() {
    // Enable all form elements
    document.querySelectorAll('input, textarea, select').forEach(function(element) {
        element.removeAttribute('disabled');
    });

    // Enable all buttons except the Edit button itself
    document.querySelectorAll('button:not(#editButton)').forEach(function(button) {
        button.removeAttribute('disabled');
    });

    // Enable the submit button
    document.getElementById('saveBtn').removeAttribute('disabled');

    // Enable file delete buttons
    document.querySelectorAll('button[onclick^="confirmDelete"]').forEach(function(button) {
        button.removeAttribute('disabled');
    });

    // Re-initialize Select2 on all selects to ensure they're editable
    $('.js-example-basic-single').select2('destroy').select2();
    $('.type_ec').select2('destroy').select2();

}

// Remove the empty addAssistant function declaration and keep only the complete one
// Remove the line: function addAssistant() { ... }

// Fix for assistantIndex to ensure it's counted correctly
let assistantIndex = @(Model.ResearchAssistants != null ? Model.ResearchAssistants.Count : 0);

// Improved addAssistant function to correctly enable elements
function addAssistant() {
    let html = `
        <tr id="assistant_${assistantIndex}">
            <td>
                <select class="form-control researcherSelect js-example-basic-single"
                         name="ResearchAssistants[${assistantIndex}].ResearcherNumber"
                        style="width: 100%;">
                    <option value="">-- เลือกนักวิจัย --</option>
                    @foreach (var item in Model.HeadResearcherList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </td>
            <td><input type="text" class="form-control assistantWorkgroup" readonly /></td>
            <td><input type="text" class="form-control assistantFaculty" readonly /></td>
            <td><input type="text" class="form-control assistantDivisions" readonly /></td>
            <td><input type="text" class="form-control assistantType" readonly /></td>
            <td>
                <button type="button" class="btn btn-danger btn-sm" onclick="removeAssistant(${assistantIndex})">ลบ</button>
            </td>
        </tr>
    `;

    // Add row to table
    $("#assistantTable tbody").append(html);

    // Initialize Select2 for the new select
    $(`#assistant_${assistantIndex} .js-example-basic-single`).select2({
        placeholder: "-- เลือกนักวิจัย --",
        allowClear: true,
        width: '100%'
    });

    assistantIndex++;
}

// Fixed document ready function with proper handlers
$(document).ready(function() {
    // Initialize Select2
    $('.js-example-basic-single').select2({
        placeholder: "-- เลือกนักวิจัย --",
        allowClear: true,
        width: '100%'
    });

    $('.type_ec').select2({
        placeholder: "-- เลือกประเภท EC --",
        allowClear: true,
        width: '100%'
    });

    // Load head researcher details on page load
    var headResearcherId = $(".headResearcher").val();
    if (headResearcherId) {
        $.get("@Url.Action("GetResearcherDetails", "Research")", {
            researcherNumber: headResearcherId
        }, function(data) {
            if (data && !data.error) {
                $("#headFaculty").val(data.Faculty + (data.StatusFaculty == 2 ? " (ยกเลิก)" : ""));
                $("#headWorkGroup").val(data.Work_groups == "-" ? data.OtherInfo : data.Work_groups + (data.StatusWork_groups == 2 ? " (ยกเลิก)" : ""));
                $("#headDepartment").val(data.Divisions + (data.StatusDivisions == 2 ? " (ยกเลิก)" : ""));
                $("#headDivition").val(data.Divisions);
            } else {
                $("#headFaculty").val("ไม่พบข้อมูล");
                $("#headWorkGroup").val("ไม่พบข้อมูล");
                $("#headDepartment").val("ไม่พบข้อมูล");
                $("#headDivition").val("ไม่พบข้อมูล");
            }
        });
    }

    // Load assistant researcher details on page load
    $(".researcherSelect").each(function() {
        let selectedResearcher = $(this).val();
        let row = $(this).closest("tr");
        if (selectedResearcher) {
            $.get("@Url.Action("GetResearcherDetails", "Research")", {
                researcherNumber: selectedResearcher
            }, function(data) {
                if (data && !data.error) {
                    row.find(".assistantWorkgroup").val(data.Work_groups == "-" ? data.OtherInfo : data.Work_groups + (data.StatusWork_groups == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantFaculty").val(data.Faculty + (data.StatusFaculty == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantDivisions").val(data.Divisions + (data.StatusDivisions == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantType").val(data.TypeResearch);
                } else {
                    row.find(".assistantWorkgroup").val("ไม่พบข้อมูล");
                    row.find(".assistantFaculty").val("ไม่พบข้อมูล");
                    row.find(".assistantDivisions").val("ไม่พบข้อมูล");
                    row.find(".assistantType").val("ไม่พบข้อมูล");
                }
            });
        }
    });

    // Head researcher change event
    $(document).on("change", ".headResearcher", function() {
        let researcherId = $(this).val();
        if (researcherId) {
            $.get("@Url.Action("GetResearcherDetails", "Research")", {
                researcherNumber: researcherId
            }, function(data) {
                if (data && !data.error) {
                    $("#headFaculty").val(data.Faculty + (data.StatusFaculty == 2 ? " (ยกเลิก)" : ""));
                    $("#headWorkGroup").val(data.Work_groups == "-" ? data.OtherInfo : data.Work_groups + (data.StatusWork_groups == 2 ? " (ยกเลิก)" : ""));
                    $("#headDepartment").val(data.Divisions + (data.StatusDivisions == 2 ? " (ยกเลิก)" : ""));
                    $("#headDivition").val(data.Divisions);
                } else {
                    $("#headFaculty").val("ไม่พบข้อมูล");
                    $("#headWorkGroup").val("ไม่พบข้อมูล");
                    $("#headDepartment").val("ไม่พบข้อมูล");
                    $("#headDivition").val("ไม่พบข้อมูล");
                }
            });
        } else {
            $("#headFaculty").val("");
            $("#headWorkGroup").val("");
            $("#headDepartment").val("");
            $("#headDivition").val("");
        }
    });

    // Assistant researcher change event
    $(document).on("change", ".researcherSelect", function() {
        let selectedResearcher = $(this).val();
        let row = $(this).closest("tr");
        if (selectedResearcher) {
            $.get("@Url.Action("GetResearcherDetails", "Research")", {
                researcherNumber: selectedResearcher
            }, function(data) {
                if (data && !data.error) {
                    row.find(".assistantWorkgroup").val(data.Work_groups == "-" ? data.OtherInfo : data.Work_groups + (data.StatusWork_groups == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantFaculty").val(data.Faculty + (data.StatusFaculty == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantDivisions").val(data.Divisions + (data.StatusDivisions == 2 ? " (ยกเลิก)" : ""));
                    row.find(".assistantType").val(data.TypeResearch);
                } else {
                    row.find(".assistantWorkgroup").val("ไม่พบข้อมูล");
                    row.find(".assistantFaculty").val("ไม่พบข้อมูล");
                    row.find(".assistantDivisions").val("ไม่พบข้อมูล");
                    row.find(".assistantType").val("ไม่พบข้อมูล");
                }
            });
        } else {
            row.find(".assistantWorkgroup").val("");
            row.find(".assistantFaculty").val("");
            row.find(".assistantDivisions").val("");
            row.find(".assistantType").val("");
        }
    });

    // EC Type change event
    $(document).on("change", ".type_ec", function() {
        let selectedValue = $(this).val();
        if (selectedValue == "1") {
            $(".date_ec").prop("disabled", true).val('');
        } else {
            $(".date_ec").prop("disabled", false);
        }
    });
});

    </script>
}